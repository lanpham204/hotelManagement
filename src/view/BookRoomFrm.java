/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.BookingDAO;
import dao.GuestDAO;
import dao.RoomDAO;
import dao.TypeOfRoomDAO;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import jdk.vm.ci.meta.Local;
import model.Booking;
import model.Guest;
import model.Room;
import model.TypeOfRoom;
import util.MsgBox;
import util.XDate;

/**
 *
 * @author phamn
 */
public class BookRoomFrm extends javax.swing.JFrame {

    private JPanel cardPanel;
    private String id;
    private int status;
    private RoomDAO dao = new RoomDAO();
    private TypeOfRoomDAO tordao = new TypeOfRoomDAO();
    private GuestDAO gdao = new GuestDAO();
    private BookingDAO bookingDAO = new BookingDAO();
    private RoomDAO roomDao = new RoomDAO();
    private List<Booking> bookings = new ArrayList<>();
    private Booking reserveBooking = new Booking();
    private List<Guest> guests = new ArrayList<>();
    private Room room = new Room();
    private TypeOfRoom tor = new TypeOfRoom();
    private NumberFormat numberFormat
            = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));

    /**
     * Creates new form BookRoomFrm
     */
    public BookRoomFrm() {
        initComponents();
        init();
    }

    public BookRoomFrm(String id, JPanel cardPanel, int status) {
        initComponents();

        this.cardPanel = cardPanel;
        this.id = id;
        this.status = status;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGender = new javax.swing.ButtonGroup();
        buttonGroupType = new javax.swing.ButtonGroup();
        lblId = new javax.swing.JLabel();
        btnCheckin = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rdoMale = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dcBirthDay = new com.toedter.calendar.JDateChooser();
        txtPhone = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rdoFemale = new javax.swing.JRadioButton();
        txtId = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        dcEnd = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        dcStart = new com.toedter.calendar.JDateChooser();
        lblPrice = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rdoDay = new javax.swing.JRadioButton();
        rdoHours = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnFindGuest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblId.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblId.setText("P101");

        btnCheckin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCheckin.setText("Check in");
        btnCheckin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckinActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin khách hàng"));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("CCCD/Hộ chiếu:");

        rdoMale.setText("Nam");
        rdoMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoMaleActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Giới tính:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Số điện thoại:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Ngày sinh:");

        dcBirthDay.setDateFormatString("dd/MM/yyyy");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Họ và tên:");

        rdoFemale.setText("Nữ");
        rdoFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoFemaleActionPerformed(evt);
            }
        });

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFullName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhone))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcBirthDay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoMale, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoFemale)
                    .addComponent(rdoMale))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin thuê phòng"));

        dcEnd.setDateFormatString("dd/MM/yyyy HH:mm:ss");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Dự kiến trả:");

        dcStart.setDateFormatString("dd/MM/yyyy HH:mm:ss");

        lblPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPrice.setText("500.000 đ");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Bắt đầu thuê:");

        rdoDay.setText("Theo ngày");
        rdoDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDayActionPerformed(evt);
            }
        });

        rdoHours.setText("Theo giờ");
        rdoHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHoursActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Loại hình thuê:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Giá:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(rdoDay, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdoHours, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 71, Short.MAX_VALUE))
                            .addComponent(lblPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoDay)
                    .addComponent(rdoHours)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        btnFindGuest.setText("Tìm");
        btnFindGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindGuestActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Tìm kiếm khách hàng:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCheckin))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFindGuest)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindGuest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCheckin)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdoFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoFemaleActionPerformed

    private void rdoMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoMaleActionPerformed

    private void btnCheckinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckinActionPerformed
        // TODO add your handling code here:
        String idGuest = txtId.getText();
        String fullName = txtFullName.getText();
        Date birthDate = dcBirthDay.getDate();
        String phoneNum = txtPhone.getText();
        Date startDate = dcStart.getDate();
        Date endDate = dcEnd.getDate();

        String gender = "";
        if (rdoMale.isSelected()) {
            gender = rdoMale.getText();
        } else if (rdoFemale.isSelected()) {
            gender = rdoFemale.getText();
        }
        String type = "";
        if (rdoDay.isSelected()) {
            type = "Ngày";
        } else if (rdoHours.isSelected()) {
            type = "Giờ";
        }
        if (idGuest.isEmpty() || fullName.isEmpty() || birthDate == null
                || startDate == null || endDate == null || phoneNum.isEmpty() || gender.isEmpty()) {
            MsgBox.showMessage(rootPane, "Vui lòng nhập đủ thông tin");
        } else {
            
            if (validate(idGuest, phoneNum, birthDate)) {
                float price = 0;
                if (rdoDay.isSelected()) {
                    price = tor.getPricePerDay();
                } else if (rdoHours.isSelected()) {
                    price = tor.getHourlyPrice();
                }
                Guest guest = new Guest(idGuest, fullName, birthDate, gender == "Nam" ? true : false, phoneNum);
                if (!exist(idGuest)) {
                    guests.add(guest);
                    gdao.insert(guest);
                }
                if (reserveBooking != null) {
                    if (endDate.getTime() >= reserveBooking.getStartDate().getTime()) {
                        MsgBox.showMessage(rootPane, "Phòng này đã có người đặt trước từ ngày "
                                + XDate.toString(reserveBooking.getStartDate(), "dd/MM/yyyy HH:mm:ss"));
                    } else {
                        Booking booking = null;
                        if (status == 1) {
                            booking = new Booking(guest.getId(), room.getId(),
                                    startDate, endDate, type == "Ngày" ? true : false,
                                    price, status);
                        } else if (status == 2) {
                            booking = new Booking(guest.getId(), room.getId(),
                                    startDate, endDate, type == "Ngày" ? true : false,
                                    price, status);
                        }

                        if (booking != null) {
                            bookingDAO.insert(booking);
                            if (status == 1) {
                                room.setStatus(1);
                                roomDao.update(room);
                                cardPanel.removeAll();
                                cardPanel.add(new CardRoomComponent(room.getId(),
                                        tor.getName(), "Khách hàng: "+ guest.getFullName(),
                                        "Đặt trước: "+XDate.toString(booking.getStartDate(), "dd/MMyyyy HH:mm:ss"),
                                         room.getStatus()));
                                cardPanel.revalidate();
                                cardPanel.repaint();
                                MsgBox.showMessage(rootPane, "Đặt phòng thành công!");
                                dispose();
                            } else {
                                cardPanel.add(new CardRoomComponent(room.getId(),
                                        tor.getName(), "Khách hàng: "+ guest.getFullName(),
                                        "Đặt trước: "+XDate.toString(booking.getStartDate(), "dd/MMyyyy HH:mm:ss"),
                                         room.getStatus()));
                                cardPanel.revalidate();
                                cardPanel.repaint();
                                MsgBox.showMessage(rootPane, "Đặt trước phòng thành công!");
                                dispose();
                            }

                        }
                    }
                } else {
                    Booking booking = null;
                    if (status == 1) {
                        booking = new Booking(guest.getId(), room.getId(),
                                startDate, endDate, type == "Ngày" ? true : false,
                                price, status);
                    } else if (status == 2) {
                        booking = new Booking(guest.getId(), room.getId(),
                                startDate, endDate, type == "Ngày" ? true : false,
                                price, status);
                    }

                    if (booking != null) {
                        bookingDAO.insert(booking);
                        if (status == 1) {
                            room.setStatus(1);
                            roomDao.update(room);
                            cardPanel.removeAll();
                            cardPanel.add(new CardRoomComponent(room.getId(), tor.getName()
                                    , "Khách hàng: " + guest.getFullName(),"",
                                     room.getStatus()));
                            cardPanel.revalidate();
                            cardPanel.repaint();
                            MsgBox.showMessage(rootPane, "Đặt phòng thành công!");
                            dispose();
                        } else {
                            cardPanel.removeAll();
                           cardPanel.add(new CardRoomComponent(room.getId(),
                                        tor.getName(), "Khách hàng: "+ guest.getFullName(),
                                        "Đặt trước: "+XDate.toString(booking.getStartDate(), "dd/MMyyyy HH:mm:ss"),
                                         room.getStatus()));
                                cardPanel.revalidate();
                                cardPanel.repaint();
                            MsgBox.showMessage(rootPane, "Đặt trước phòng thành công!");
                             dispose();
                        }

                    }
                }

            }
        }

    }//GEN-LAST:event_btnCheckinActionPerformed

    private void rdoDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDayActionPerformed
        // TODO add your handling code here:
        lblPrice.setText(numberFormat.format(tor.getPricePerDay()) + "");
    }//GEN-LAST:event_rdoDayActionPerformed

    private void rdoHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHoursActionPerformed
        // TODO add your handling code here:
        lblPrice.setText(numberFormat.format(tor.getHourlyPrice()) + "");
    }//GEN-LAST:event_rdoHoursActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnFindGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindGuestActionPerformed
        // TODO add your handling code here:
        searchGuest();
    }//GEN-LAST:event_btnFindGuestActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchGuest();
        }
    }//GEN-LAST:event_txtSearchKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookRoomFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookRoomFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckin;
    private javax.swing.JButton btnFindGuest;
    private javax.swing.ButtonGroup buttonGroupGender;
    private javax.swing.ButtonGroup buttonGroupType;
    private com.toedter.calendar.JDateChooser dcBirthDay;
    private com.toedter.calendar.JDateChooser dcEnd;
    private com.toedter.calendar.JDateChooser dcStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JRadioButton rdoDay;
    private javax.swing.JRadioButton rdoFemale;
    private javax.swing.JRadioButton rdoHours;
    private javax.swing.JRadioButton rdoMale;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setLocationRelativeTo(null);
        lblId.setText(id);
        dcStart.setDate(new Date());
        addButtonGr();
        guests = gdao.selectAll();
        room = dao.selectById(id);
        tor = tordao.selectById(room.getIdTypeofRoom());
        rdoDay.setSelected(true);
        lblPrice.setText(numberFormat.format(tor.getPricePerDay()) + "");
        reserveBooking = bookingDAO.selectReserveByIdRoom(id);

    }

    private void addButtonGr() {
        buttonGroupGender.add(rdoMale);
        buttonGroupGender.add(rdoDay);

        buttonGroupType.add(rdoDay);
        buttonGroupType.add(rdoHours);
    }

    private boolean exist(String id) {
        for (Guest guest : guests) {
            if (id.equalsIgnoreCase(guest.getId())) {
                return true;
            }
        }
        return false;
    }

    private void setForm(Guest guest) {
        txtId.setText(guest.getId());
        txtFullName.setText(guest.getFullName());
        txtPhone.setText(guest.getPhoneNum());
        dcBirthDay.setDate(guest.getBirthDate());
        if (guest.isGender()) {
            rdoMale.setSelected(true);
        } else {
            rdoFemale.setSelected(false);
        }
    }

    private void searchGuest() {
        String id = txtSearch.getText();
        Guest g = gdao.selectById(id);
        if (g != null) {
            txtId.setText(g.getId());
            txtFullName.setText(g.getFullName());
            txtPhone.setText(g.getPhoneNum());
            dcBirthDay.setDate(g.getBirthDate());
            if (g.isGender()) {
                rdoMale.setSelected(true);
            } else {
                rdoFemale.setSelected(true);
            }
        } else {
            MsgBox.showMessage(rootPane, "Mã khách hàng không tồn tại !");
        }
    }

    private boolean validate(String idGuest, String phoneNum, Date birthDate) {
        if (!idGuest.matches("^([A-Z0-9]{9,13})$")) {
            MsgBox.showMessage(rootPane, "Số CMND/Căn cước/Hộ chiếu không hợp lệ! \n"
                    + "VD hợp lệ: 037153000257");
            return false;
        } else if (!phoneNum.matches("^(03|07|08|09)\\d{8}$")) {
            MsgBox.showMessage(rootPane, "Số điện thoại phải có 10 chữ số\n"
                    + "VD hợp lệ: 0812312312");
            return false;
        } else if ((LocalDate.now().getYear() - birthDate.getYear() - 1900) < 18) {
            MsgBox.showMessage(rootPane, "Ngày sinh không hợp lệ\n"
                    + "Phải trên 18 tuổi\n"
                    + "VD hợp lệ: 04/06/2000");
            return false;
        }
        return true;
    }

   

}
